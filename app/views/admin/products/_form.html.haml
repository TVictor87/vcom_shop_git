- unless @product.new_record?
  %ul.nav.nav-tabs
    %li.active
      %a{ 'data-toggle': 'tab', href: '#inf' }= t('admin.products.information')
    %li
      %a{ 'data-toggle': 'tab', href: '#img' }= t('admin.images.title')

- pages = Page.select :id, :title_ru
- currencies = Currency.select :id, :title_ru

.box-body.tab-content
  #inf.tab-pane.active
    = simple_form_for [:admin, @product], validate: true do |f|
      = f.input :title_ru
      = f.input :description_ru
      = f.input :url_ru
      = f.input :title_uk
      = f.input :description_uk
      = f.input :url_uk
      = f.input :title_en
      = f.input :description_en
      = f.input :url_en
      = f.input :priority, label: t('activerecord.attributes.priority')
      = f.input :category_id, collection: Category.select(:id, :name_ru), label_method: :name_ru, input_html: { class: 'select2' }
      = f.input :page_ids, collection: pages, label_method: :title_ru, input_html: { class: 'select2', multiple: true }
      = f.input :site_ids, collection: Site.select(:id, :title_ru), label_method: :title_ru, input_html: { class: 'select2', multiple: true }
      = f.input :retail_price
      = f.input :retail_price_currency_id, selected: (@product.retail_price_currency_id or currencies.first.id), collection: currencies, label_method: :title_ru, input_html: { class: 'select2' }
      = f.input :wholesale_price
      = f.input :wholesale_price_currency_id, selected: (@product.wholesale_price_currency_id or currencies.first.id), collection: currencies, label_method: :title_ru, input_html: { class: 'select2' }
      = f.input :special_price
      = f.input :special_price_currency_id, selected: (@product.special_price_currency_id or currencies.first.id), collection: currencies, label_method: :title_ru, input_html: { class: 'select2' }
      = f.input :special_link_id
      = f.input :active, label: t('activerecord.attributes.active')
      - category = @product.category
      - product_id = @product.id
      - if category
        - option_value = "value_#{locale}"
        - option_ids = @product.option_ids
        - active_groups = []
        - inactive_groups = []
        - title = "title_#{locale}"
        - category.option_groups.select(:id, :field_type, title, :active).to_a.uniq.each do |option_group|
          - if option_group.active
            - active_groups << option_group
          - else
            - inactive_groups << option_group
        - nowrap = {style: 'white-space:nowrap'}
        - onclickEdit = {onclick: 'WarehouseTable.edit.call(this)'}
        - onclickDelete = {onclick: 'WarehouseTable.delete.call(this)'}
        - addRow = {onclick: 'WarehouseTable.add.call(this)', style: 'position:absolute;width:150px;left:50%;margin-left:-75px;z-index:100'}
        - ids = {}
        - warehouse_products = []
        - ActiveRecord::Base.connection.select_rows("SELECT warehouse_products.id, warehouse_products.quantity, warehouse_products.retail_price_changed, warehouse_products.warehouse_id, options.id, options.#{option_value}, options.option_group_id FROM warehouse_products INNER JOIN options_warehouse_products op ON op.warehouse_product_id = warehouse_products.id INNER JOIN options ON options.id = op.option_id WHERE warehouse_products.product_id = #{product_id} ORDER BY warehouse_products.id").each do |row|
          - id = row[0]
          - i = ids[id]
          - if i
            - warehouse_products[i][:option_ids][row[6].to_i] = {id: row[4], value: row[5]}
          - else
            - i = warehouse_products.size
            - ids[id] = i
            - warehouse_products[i] = {id: id, quantity: row[1], price: row[2], warehouse_id: row[3], option_ids: {row[6].to_i => {id: row[4], value: row[5]}}}
        - active_groups.each do |group|
          .form-group.select.optional{id: "option_group_select_#{group.id}", style: 'display:none'}
            %select.select.optional.select2.form-control{'data-color': group.field_type == 'color'}
              - group.options.select(:id, option_value).each do |option|
                %option{value: option.id}= option[option_value]
        - Warehouse.order(:id).each do |warehouse|
          - warehouse_id = warehouse.id.to_s
          .box.box-primary
            .box-header.with-border
              %h3.text-center= warehouse.name
            .box-body.box-body.table-responsive.no-padding
              - addRow['data-warehouse-id'] = warehouse_id
              .btn.btn-success{addRow} Добавить запись
              %table.table.table-hover.table-bordered.dataTable
                %thead
                  %tr
                    - w = {style: "width: #{100.0 / (active_groups.size + 2)}%"}
                    - active_groups.each do |option_group|
                      - w['data-id'] = option_group.id
                      - w['data-type'] = option_group.field_type
                      %th{w}= option_group[title]
                    - w.delete 'data-id'
                    - w.delete 'data-type'
                    %th{w} Количество
                    %th{w} Изменение цены
                    %th
                %tbody
                  - warehouse_products.each do |row|
                    - if row[:warehouse_id] == warehouse_id
                      - option_ids = row[:option_ids]
                      %tr{'data-id' => row[:id]}
                        - active_groups.each do |option_group|
                          - option = option_ids[option_group.id]
                          - case option_group.field_type
                            - when 'string'
                              %td{'data-id' => option[:id]}= option[:value]
                            - when 'color'
                              %td{'data-id' => option[:id]}
                                - value = option[:value]
                                %div{style: "display: inline-block; vertical-align: middle; margin: 0 10px; width: 30px; height: 20px; background: ##{value[0..5]}"}
                                = value[6..-1]
                        %td= row[:quantity]
                        %td= row[:price]
                        %td{nowrap}
                          .btn.btn-warning{onclickEdit}
                            .fa.fa-pencil-square-o
                          .btn.btn-danger{onclickDelete}
                            .fa.fa-trash-o

        - inactive_groups.each do |option_group|
          .box.box-success
            .box-header.with-border
              .box-title= option_group["title_#{locale}"]
            .box-body
              - case option_group.field_type
                - when 'string'
                  = f.input :option_ids, collection: option_group.options.select(:id, "value_#{locale}"), label_method: option_value, input_html: { class: 'select2', multiple: true }
                - when 'color'
                  .form-group.boolean.optional
                    - option_group.options.select(:id, option_value).each do |option|
                      - id = option.id
                      - value = option[option_value]
                      %label.boolean.optional.control-label
                        %input.boolean.optional{type: 'checkbox', value: id, name: "product[option_ids][]", checked: option_ids.include?(id)}
                        %div{style: "display: inline-block; vertical-align: middle; margin: 0 10px; width: 30px; height: 20px; background: ##{value[0..5]}"}
                        = value[6..-1]
  - unless @product.new_record?
    #img.tab-pane
      %table.table.table-bordered.table-striped.dataTable
        %thead
          %tr
            %th= t('activerecord.attributes.image.image')
            %th= t('activerecord.attributes.image.title_ru')
            %th= t('activerecord.attributes.image.alt_ru')
            %th= t('activerecord.attributes.image.title_uk')
            %th= t('activerecord.attributes.image.alt_uk')
            %th= t('activerecord.attributes.image.title_en')
            %th= t('activerecord.attributes.image.alt_en')
            %th= t('activerecord.attributes.priority')
            %th= t('helpers.actions')

        %tbody
          - @product.images.each do |product_image|
            %tr
              %td= image_tag product_image.image_url, class: 'medium_img'
              %td= product_image.title_ru
              %td= product_image.alt_ru
              %td= product_image.title_uk
              %td= product_image.alt_uk
              %td= product_image.title_en
              %td= product_image.alt_en
              %td= product_image.priority
              %td
                = link_to t('helpers.links.destroy'), admin_product_product_image_path(@product.id, product_image.id), method: :delete

    :javascript
      currencies = #{currencies.to_json}
      product_id = #{@product.id or 0}
      locale = "#{locale}"

%script{type: 'text/javascript', src: '/assets/admin/product-edit.js'}